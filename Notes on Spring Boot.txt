lets you to bootstrap Spring application from scratch : Spring Boot

Spring provides multiple facilities. In order to make them work, there are multiple ways. There is no best practice or like. To resolve it, Spring boot came into. Start with this opinion is provided by Spring boot.
Since it gives opinions we should follow convention over configuration. It lets to create standalone application without finding a container and deployment pain. Development -> Production : no work in between.

Spring boot access application containers or application context when it is started

create a class and annotate with service or controller, then it will consider it as service or controller by performing class path scanning

spring boot starts tomcat server

In pom.xml dependency of spring boot starter web says the jars to download and parent project says version of those jars
Bill of materials (Spring boot care about the version of jars which can work without issues)

Embedded tomcat server:
convenience
can have container configuration in application.properties
standalone application : easy to create, deploy and run
useful for microservices architecture (don't need to start one by one)

Controller:
URI
Http method
functionality

=====================================================================================================================
Course API

Topics:

GET /topics
GET /topics/id
POST /topics create
PUT /topics/id
DELETE /topics/id

Business service is singleton in Spring

in post man rest client: raw, post and Content-Type is application/json

{
	"id" : "topicId4",
	"name" : "Topic 4",
	"description" : "Topic 4 description"
}

in post man rest client: raw, put and Content-Type is application/json

{
	"id" : "topicId3",
	"name" : "Topic 3 updated",
	"description" : "Topic 3 updated description"
}
=====================================================================================================================

Starting Spring boot application:

-Spring initializer (http://start.spring.io/)
-Spring Boot CLI
-STS IDE (Spring Starter Project option in eclipse by STS(create and import itself))

Spring Boot CLI (install spring boot and run Groovy script to start Spring boot)

in cmd:
cd spring-2.0.0.RELEASE\bin (full path)
nano app.groovy
type the following:
@RestController
class AppCtrl{
	@RequestMapping("/")
	String app(){
		"Hello world"
	}
}
save and exit
spring run app.groovy

=====================================================================================================================
application.properties options:
https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
=====================================================================================================================
Spring Data JPA (Java Persistent API)
JPA is the API for ORM
Apache Derby: Embedded database: download a jar in class path when application is get started this database server also get started and stopped also same.
(not suitable for production, good for development for learning)
No connection information is necessary

======================================================================================================================

packaging
as jar: mvn clean install
running jar : java -jar target\SpringBootExample-0.0.1-SNAPSHOT.jar

----------------------------------------------------------------------------------------------------------------------